
class ProgressTracker {
    constructor (options) {
        console.log("⚙", options, "⚙");

        this.options = options;

        this.currentProgress =  [] //dataAccess[this.options.mode].getProgressOfToday() || [];
        this.timerId = null;

        this.percentageRatio = 100 / this.options.dailyGoal;

        this.percentage = document.querySelector(`.${this.options.domRefs.percentage}`);
        this.timeStampHolder = document.querySelector(`.${this.options.domRefs.timeStampHolder}`);
        this.addButton = document.querySelector(`.${this.options.domRefs.addButton}`);

        this.currentGoalHolders = document.querySelectorAll(`.${this.options.domRefs.currentGoal}`);
        this.currentUnitsHolders = document.querySelectorAll(`.${this.options.domRefs.currentUnits}`);

        this.showUserOptions();
        this.updateProgress();
    };

    updateProgress(newLogging = [null, 200]) {
        this.currentProgress.push(newLogging);
        // this.showTimeStamp(newLogging[0]);

        const oldProgress = this.percentage.innerText,
              newProgress = oldProgress + newLogging[1] * this.percentageRatio;
        
        let v = oldProgress;

        this.timerId = setInterval(() => {
            this.percentage.innerText = v;
            if (v >= newProgress) {
                clearInterval(this.timerId);
            }
            v++
        }, 16);
    };

    showUserOptions() {
        for (const g of this.currentGoalHolders) {
            g.innerHTML = this.options.dailyGoal;
        };

        for (const u of this.currentUnitsHolders) {
            u.innerHTML = this.options.units;
        }
    };
};
// Hoofdmodule
const uiBinding = (function() {
    // Submodules
    const wave = (function() {
        const setup = function() {
            console.log('setup');
        };

        const updateWaveHeight = function() {
            console.log('updateWaveHeight');
        };

        return {
            setup : setup,
            updateWaveHeight : updateWaveHeight
        }
    })();

    const logging = (function() {
        const setup = function() {
            console.log('setup');
        };

        const enableAmountOptions = function() {
            console.log('enableAmountOptions');
        };

        return {
            setup : setup,
            enableAmountOptions : enableAmountOptions
        }
    })();

    return {
        wave : wave,
        logging : logging
    }
})();
(function() {
	console.log('💧', 'https://www.youtube.com/watch?v=ARC1w1WWxGY');

	const options = {
		units: 'ml',
		dailyGoal: 2000,
		mode: 'local',
		domRefs: {
			percentage: 	 'js-amount',
			timeStampHolder: 'js-timestamps',
			addButton: 		 'js-log',
			currentGoal: 	 'js-goal',
			currentUnits: 	 'js-units'
		},
		afterUpdate: function(newPercentage) {
			console.log("It's been updated! 👍");
		}
	}

	document.addEventListener('DOMContentLoaded', () => {
		new ProgressTracker(options);
	});
})();
